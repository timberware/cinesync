version: "3.1"

services:
  cinesync_db:
    container_name: cinesync_db
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=cinesync-dev
      - POSTGRES_PASSWORD=@BarelyAnInconvenience@
      - POSTGRES_DB=cinesync-dev
      - TZ=America/Toronto
    volumes:
      - ./api/db-data:/var/lib/postgresql/data
  api:
    container_name: api
    build:
      context: ./api
    environment:
      - TZ=America/Toronto
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - TMDB_TOKEN=${TMDB_TOKEN}
      - MAILGUN_KEY=${MAILGUN_KEY}
      - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
      - NODE_ENV=${NODE_ENV}
    ports:
      - 4000:4000
    depends_on:
      - cinesync_db
    restart: always

  web:
    container_name: web
    build:
      context: ./web
    environment:
      - API_HOST=${API_HOST}
      - PUBLIC_API_HOST=${PUBLIC_API_HOST}
      - TMDB_TOKEN=${TMDB_TOKEN}
      - NODE_ENV=${NODE_ENV}
    ports:
      - 3000:3000
    depends_on:
      - api
    restart: "unless-stopped"

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - redis_volume_data:/data
    ports:
      - 6379:6379
    command: redis-server --requirepass docker

  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: redis_insight
    restart: always
    ports:
      - 5540:5540
    volumes:
      - redis_insight_volume_data:/db

volumes:
  redis_volume_data:
  redis_insight_volume_data:
